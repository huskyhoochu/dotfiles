{
  "mcpServers": {
    "sequential-thinking": {
      "command": "npx @anthropic-ai/mcp-sequential-thinking",
      "description": "Systematic step-by-step thinking process for complex tasks",
      "autoLoad": true,
      "priority": "high"
    },
    "serena": {
      "command": "npx @anthropic-ai/mcp-serena", 
      "description": "Code analysis and implementation assistant",
      "autoLoad": true,
      "priority": "high"
    }
  },
  "defaultMcpUsage": {
    "complexTasks": "sequential-thinking",
    "codeOperations": "serena",
    "fileAnalysis": "serena",
    "functionSearch": "serena",
    "codeGeneration": "serena",
    "architecturePlanning": "sequential-thinking"
  },
  "mcpTriggerConditions": {
    "sequential-thinking": [
      "complex architecture design",
      "system planning",
      "multi-step implementation",
      "optimization strategy", 
      "performance planning",
      "migration strategy",
      "integration planning",
      "scalability design"
    ],
    "serena": [
      "code reading",
      "code writing", 
      "function search",
      "file analysis",
      "refactoring",
      "implementation",
      "code review",
      "debugging",
      "pattern search",
      "optimization"
    ]
  },
  "agentMcpRules": {
    "enforceSequentialThinking": true,
    "enforceSerenaForCode": true,
    "allowDirectResponse": {
      "conditions": [
        "simple questions",
        "explanations", 
        "definitions",
        "quick code snippets (â‰¤5 lines)",
        "basic debugging hints"
      ]
    }
  },
  "agentSpecificRules": {
    "work-distributor": {
      "requiredTools": ["sequential-thinking", "serena"],
      "alwaysUseSequentialThinking": true,
      "coordinationMode": true
    },
    "golang-pro": {
      "requiredTools": ["sequential-thinking", "serena"],
      "sequentialThinkingFor": ["architecture", "microservices", "performance"],
      "serenaFor": ["go code", "implementation", "refactoring"]
    },
    "typescript-pro": {
      "requiredTools": ["sequential-thinking", "serena"], 
      "sequentialThinkingFor": ["type system design", "build optimization"],
      "serenaFor": ["typescript code", "type definitions", "configuration"]
    },
    "frontend-developer": {
      "requiredTools": ["sequential-thinking", "serena"],
      "sequentialThinkingFor": ["UI architecture", "component design"],
      "serenaFor": ["component code", "styling", "state management"]
    },
    "postgres-pro": {
      "requiredTools": ["sequential-thinking", "serena"],
      "sequentialThinkingFor": ["database design", "optimization strategy"],
      "serenaFor": ["SQL queries", "configuration", "stored procedures"]
    },
    "code-reviewer": {
      "requiredTools": ["sequential-thinking", "serena"],
      "sequentialThinkingFor": ["review strategy", "quality assessment"],
      "serenaFor": ["code analysis", "pattern detection", "suggestions"]
    },
    "rust-engineer": {
      "requiredTools": ["sequential-thinking", "serena"],
      "sequentialThinkingFor": ["memory management design", "performance"],
      "serenaFor": ["rust code", "cargo configuration", "optimization"]
    },
    "nextjs-fullstack-expert": {
      "requiredTools": ["sequential-thinking", "serena"],
      "sequentialThinkingFor": ["full-stack architecture", "SSR strategy"],
      "serenaFor": ["next.js code", "configuration", "optimization"]
    },
    "react-specialist": {
      "requiredTools": ["sequential-thinking", "serena"],
      "sequentialThinkingFor": ["component architecture", "state design"],
      "serenaFor": ["react code", "hooks", "performance optimization"]
    }
  },
  "qualityGates": {
    "mcpUsageCompliance": {
      "required": true,
      "threshold": 100,
      "measurement": "percentage"
    },
    "sequentialThinkingUsage": {
      "complexTasks": true,
      "architecturalWork": true,
      "multiStepPlanning": true
    },
    "serenaUsage": {
      "allCodeWork": true,
      "fileOperations": true,
      "analysisWork": true
    }
  },
  "monitoring": {
    "trackMcpUsage": true,
    "logAgentDelegations": true,
    "measurePerformance": true,
    "qualityMetrics": true
  }
}
